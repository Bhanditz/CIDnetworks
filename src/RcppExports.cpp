// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// makeEdgeList
IntegerMatrix makeEdgeList(int nn);
RcppExport SEXP CIDnetworks_makeEdgeList(SEXP nnSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< int >::type nn(nnSEXP );
        IntegerMatrix __result = makeEdgeList(nn);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// makeEdgeListSelfies
IntegerMatrix makeEdgeListSelfies(int nn);
RcppExport SEXP CIDnetworks_makeEdgeListSelfies(SEXP nnSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< int >::type nn(nnSEXP );
        IntegerMatrix __result = makeEdgeListSelfies(nn);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// symBlock
NumericMatrix symBlock(NumericVector entries);
RcppExport SEXP CIDnetworks_symBlock(SEXP entriesSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type entries(entriesSEXP );
        NumericMatrix __result = symBlock(entries);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// eldc
NumericVector eldc(NumericMatrix latentSpacePos, IntegerMatrix edgelist);
RcppExport SEXP CIDnetworks_eldc(SEXP latentSpacePosSEXP, SEXP edgelistSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type latentSpacePos(latentSpacePosSEXP );
        Rcpp::traits::input_parameter< IntegerMatrix >::type edgelist(edgelistSEXP );
        NumericVector __result = eldc(latentSpacePos, edgelist);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// cosineClosenessC
NumericVector cosineClosenessC(NumericMatrix latentSpacePos, IntegerMatrix edgelist);
RcppExport SEXP CIDnetworks_cosineClosenessC(SEXP latentSpacePosSEXP, SEXP edgelistSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type latentSpacePos(latentSpacePosSEXP );
        Rcpp::traits::input_parameter< IntegerMatrix >::type edgelist(edgelistSEXP );
        NumericVector __result = cosineClosenessC(latentSpacePos, edgelist);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// coincidence
IntegerMatrix coincidence(IntegerMatrix edgelist, int nodes);
RcppExport SEXP CIDnetworks_coincidence(SEXP edgelistSEXP, SEXP nodesSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerMatrix >::type edgelist(edgelistSEXP );
        Rcpp::traits::input_parameter< int >::type nodes(nodesSEXP );
        IntegerMatrix __result = coincidence(edgelist, nodes);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// xty
NumericVector xty(IntegerMatrix edgelist, NumericVector outcome, int nodes);
RcppExport SEXP CIDnetworks_xty(SEXP edgelistSEXP, SEXP outcomeSEXP, SEXP nodesSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerMatrix >::type edgelist(edgelistSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type outcome(outcomeSEXP );
        Rcpp::traits::input_parameter< int >::type nodes(nodesSEXP );
        NumericVector __result = xty(edgelist, outcome, nodes);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
